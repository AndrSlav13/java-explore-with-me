DROP TABLE IF EXISTS public.categories CASCADE;
DROP TABLE IF EXISTS public.users CASCADE;
DROP TABLE IF EXISTS public.events CASCADE;
DROP TABLE IF EXISTS public.comments CASCADE;
DROP TABLE IF EXISTS public.comment_details CASCADE;
DROP TABLE IF EXISTS public.compilations CASCADE;
DROP TABLE IF EXISTS public.requests CASCADE;
DROP TABLE IF EXISTS event_compilation CASCADE;

create table if not exists public.categories (
        id int8 generated by default as identity,
        name varchar(200),
        primary key (id),
        constraint categories_natural_pk unique (name)
);

create table if not exists public.users (
        id int8 generated by default as identity,
        email varchar(200),
        name varchar(200),
        primary key (id),
        constraint users_natural_pk unique (email)
);

create table if not exists public.events (
        id int8 generated by default as identity,
        annotation varchar(1200),
        created_on timestamp,
        description varchar(1200),
        event_date timestamp,
        location varchar(255),
        paid boolean,
        participant_limit int4,
        published_on timestamp,
        request_moderation boolean,
        state varchar(255),
        title varchar(200),
        category_id int8,
        user_id int8,
        primary key (id),
        constraint fk_events_categories foreign key (category_id) references public.categories,
        constraint fk_events_users foreign key (user_id) references public.users
);

create table if not exists public.comments (
        id int8 generated by default as identity,
        is_published boolean,
        message varchar(4000),
        published_on timestamp,
        commented_id int8,
        commenter_id int8,
        parent_comment_id int8,
        primary key (id),
        constraint fk_comments_events foreign key (commented_id) references public.events on delete cascade,
        constraint fk_comments_users foreign key (commenter_id) references public.users,
        constraint fk_comments_subcomments foreign key (parent_comment_id) references public.comments on delete cascade
);

create table if not exists public.comment_details (
        date timestamp,
        description varchar(500),
        state_comment varchar(255),
        comment_id int8 not null,
        primary key (comment_id),
        constraint fk_comment_details_comments foreign key (comment_id) references public.comments on delete cascade
);



create table if not exists public.compilations (
        id int8 generated by default as identity,
        pinned boolean,
        title varchar(200),
        primary key (id)
);


create table if not exists public.requests (
        id int8 generated by default as identity,
        created timestamp,
        status varchar(255),
        event_id int8,
        requester_id int8,
        primary key (id),
        constraint connection_table_requests unique (event_id, requester_id),
        constraint fk_requests_events foreign key (event_id) references public.events on delete cascade,
        constraint fk_requests_users foreign key (requester_id) references public.users
);




create table if not exists event_compilation (
        event_id int8 not null,
        compilation_id int8 not null,
        primary key (event_id, compilation_id),
        constraint fk_event_compilation1 foreign key (compilation_id) references public.compilations on delete cascade,
        constraint fk_event_compilation2 foreign key (event_id) references public.events on delete cascade
);

